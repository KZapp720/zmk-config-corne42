/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    combos {
        compatible = "zmk,combos";

        LSHIFT4C {
            bindings = <&kp LSHFT>;
            key-positions = <25 26 27 28>;
        };

        LCTRL4C {
            bindings = <&kp LCTRL>;
            key-positions = <13 14 15 16>;
        };

        LALT4C {
            bindings = <&kp LALT>;
            key-positions = <1 2 3 4>;
        };

        RSHIFT4C {
            bindings = <&kp RSHFT>;
            key-positions = <31 32 33 34>;
        };

        RCTRL4C {
            bindings = <&kp RCTRL>;
            key-positions = <19 20 22 21>;
        };

        RALT4C {
            bindings = <&kp RALT>;
            key-positions = <7 8 9 10>;
        };

        LSHIFT3C {
            bindings = <&kp LSHFT>;
            key-positions = <25 26 27>;
        };

        LCTRL3C {
            bindings = <&kp LCTRL>;
            key-positions = <13 14 15>;
        };

        LALT3C {
            bindings = <&kp LALT>;
            key-positions = <1 2 3>;
        };

        RSHIFT3C {
            bindings = <&kp RSHFT>;
            key-positions = <32 33 34>;
        };

        RCTRL3C {
            bindings = <&kp RCTRL>;
            key-positions = <20 22 21>;
        };

        RALT3C {
            bindings = <&kp RALT>;
            key-positions = <8 9 10>;
        };

        CAPSLOCK8C {
            bindings = <&kp CAPS>;
            key-positions = <25 26 27 28 31 32 33 34>;
            layers = <0>;
        };

        BRACKET2C {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <35 34>;
            layers = <0>;
        };

        ONE2C {
            bindings = <&kp NUMBER_1>;
            key-positions = <0 1>;
            layers = <0 2>;
        };

        TWO2C {
            bindings = <&kp NUMBER_2>;
            key-positions = <1 2>;
            layers = <0 2>;
        };

        THREE2C {
            bindings = <&kp NUMBER_3>;
            key-positions = <2 3>;
            layers = <0 2>;
        };

        FOUR2C {
            bindings = <&kp NUMBER_4>;
            key-positions = <3 4>;
            layers = <0 2>;
        };

        FIVE2C {
            bindings = <&kp N5>;
            key-positions = <4 5>;
            layers = <0 2>;
        };

        SIX2C {
            bindings = <&kp NUMBER_6>;
            key-positions = <6 7>;
            layers = <0 2>;
        };

        SEVEN2C {
            bindings = <&kp N7>;
            key-positions = <7 8>;
            layers = <0 2>;
        };

        EIGHT2C {
            bindings = <&kp N8>;
            key-positions = <8 9>;
            layers = <0 2>;
        };

        NINE2C {
            bindings = <&kp N9>;
            key-positions = <9 10>;
            layers = <0 2>;
        };

        ZERO2C {
            bindings = <&kp N0>;
            key-positions = <10 11>;
            layers = <0 2>;
        };

        SUPER2C {
            bindings = <&mt RGUI CAPS>;
            key-positions = <24 35>;
            layers = <1 2>;
        };

        SYMBOL2C {
            bindings = <&lt 1 ESCAPE>;
            key-positions = <36 41>;
        };

        NAVIGATION2C {
            bindings = <&lt 2 SPACE>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&mt LALT MINUS    &kp Q  &kp W  &kp E     &kp R               &kp T        &kp Y      &kp U           &kp I      &kp O    &kp P     &mt RALT EQUAL
&mt LCTRL ESCAPE  &kp A  &kp S  &kp D     &kp F               &kp G        &kp H      &kp J           &kp K      &kp L    &kp SEMI  &mt LCTRL SINGLE_QUOTE
&mt LSHFT GRAVE   &kp Z  &kp X  &kp C     &kp V               &kp B        &kp N      &kp M           &kp COMMA  &kp DOT  &kp FSLH  &mt LSHFT BACKSLASH
                                &kp BSPC  &mt LEFT_GUI SPACE  &mkp LCLK    &mkp RCLK  &mt RGUI SPACE  &kp ENTER
            >;
        };

        Symbol {
            bindings = <
&mt LALT TAB         &kp N1             &kp N2    &kp N3           &kp N4                 &kp N5            &kp N6     &kp N7  &kp N8  &kp N9  &kp N0     &mt RALT TAB
&mt LCTRL BACKSPACE  &kp APOS           &kp LBKT  &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &kp UNDERSCORE    &kp MINUS  &kp N4  &kp N5  &kp N6  &kp EQUAL  &mt RCTRL ENTER
&mt LSHFT SPACE      &kp DOUBLE_QUOTES  &kp RBKT  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp GRAVE         &kp DOT    &kp N1  &kp N2  &kp N3  &kp FSLH   &mt RSHFT SPACE
                                                  &trans           &trans                 &trans            &trans     &trans  &trans
            >;
        };

        Navigation {
            bindings = <
&mt LALT TAB         &kp PAGE_UP    &kp LA(LEFT_ARROW)  &kp UP_ARROW    &kp LA(RIGHT)  &kp HOME      &kp HOME    &kp RS(RA(LEFT_ARROW))  &kp RS(UP_ARROW)  &kp RS(RA(RIGHT))  &kp PG_UP      &mt RALT TAB
&mt LCTRL BACKSPACE  &kp PAGE_DOWN  &kp LEFT            &kp DOWN_ARROW  &kp RIGHT      &kp END       &kp END     &kp RS(LEFT)            &kp RS(DOWN)      &kp RS(RIGHT)      &kp PAGE_DOWN  &mt RCTRL RET
&mt LSHFT SPACE      &kp K_UNDO     &kp K_CUT           &kp K_COPY      &kp K_PASTE    &kp K_REDO    &kp K_REDO  &kp K_PASTE             &kp K_COPY        &kp K_CUT          &kp K_UNDO     &mt RSHFT SPACE
                                                        &trans          &trans         &trans        &trans      &trans                  &trans
            >;
        };
    };
};
